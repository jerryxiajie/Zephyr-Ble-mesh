--- samples/bluetooth/mesh/src/main.c
+++ samples/bluetooth/mesh/src/main.c
@@ -35,30 +35,29 @@ static struct bt_mesh_cfg_srv cfg_srv = {
 	.relay_retransmit = BT_MESH_TRANSMIT(2, 20),
 };
 
-static struct bt_mesh_health_srv health_srv = {
-};
-
-BT_MESH_HEALTH_PUB_DEFINE(health_pub, 0);
-
-static struct bt_mesh_model_pub gen_level_pub;
 static struct bt_mesh_model_pub gen_onoff_pub;
 
 static void gen_onoff_get(struct bt_mesh_model *model,
 			  struct bt_mesh_msg_ctx *ctx,
 			  struct net_buf_simple *buf)
 {
+	printk("Get data! \n");
 }
 
 static void gen_onoff_set(struct bt_mesh_model *model,
 			  struct bt_mesh_msg_ctx *ctx,
 			  struct net_buf_simple *buf)
 {
+	u8_t onoff_state = net_buf_simple_pull_u8(buf);
+	printk("Set data! net_index = %d,app_idx = %d,remote_addr = %d,onoff_state = %d \n",ctx->net_idx,ctx->app_idx,ctx->addr,onoff_state);
 }
 
 static void gen_onoff_set_unack(struct bt_mesh_model *model,
 				struct bt_mesh_msg_ctx *ctx,
 				struct net_buf_simple *buf)
 {
+	printk("Set unack data! net_index = %d,app_idx = %d,remote_addr = %d \n",ctx->net_idx,ctx->app_idx,ctx->addr);
+
 }
 
 static const struct bt_mesh_model_op gen_onoff_op[] = {
